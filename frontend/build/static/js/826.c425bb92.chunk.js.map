{"version":3,"file":"static/js/826.c425bb92.chunk.js","mappings":"gMAMA,MAuFA,EAvFsBA,KACpB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAiBC,IAAsBF,EAAAA,EAAAA,UAAS,IAEjDG,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,MAERC,GAAe,UAAEC,EAAS,MAAEC,EAAK,UAAEC,KACxCC,EAAAA,EAAAA,OAEI,gBAAEC,IAAoBC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,QAEzDC,EAAAA,EAAAA,YAAU,KAII,IAADC,GAHPL,GACFT,EAAS,KAEPM,IACFS,EAAAA,GAAMT,MAAW,OAALA,QAAK,IAALA,GAAW,QAANQ,EAALR,EAAOU,YAAI,IAAAF,OAAN,EAALA,EAAaG,SAGvBV,IACFQ,EAAAA,GAAMG,QAAQ,+BACdlB,EAAS,UACX,GACC,CAACM,EAAOG,EAAiBF,EAAWP,IAavC,OACEmB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,cAAaD,UAC1BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,kBAAiBD,UAC9BE,EAAAA,EAAAA,MAAA,QAAMD,UAAU,yBAAyBE,SAf1BC,IAGrB,GAFAA,EAAEC,iBAEE/B,IAAaG,EACf,OAAOiB,EAAAA,GAAMT,MAAM,uCAGrB,MAAMU,EAAO,CAAErB,WAAUG,mBAEzBM,EAAc,CAAEuB,MAAa,OAANzB,QAAM,IAANA,OAAM,EAANA,EAAQyB,MAAOC,KAAMZ,GAAO,EAMoBK,SAAA,EAC/DF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,OAAMD,SAAC,kBAErBE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,OAAMD,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOU,QAAQ,iBAAiBP,UAAU,aAAYD,SAAC,cAGvDF,EAAAA,EAAAA,KAAA,SACEW,KAAK,WACLC,GAAG,iBACHT,UAAU,eACVU,KAAK,WACLC,MAAOtC,EACPuC,SAAWT,GAAM7B,EAAY6B,EAAEU,OAAOF,aAI1CV,EAAAA,EAAAA,MAAA,OAAKD,UAAU,OAAMD,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOU,QAAQ,yBAAyBP,UAAU,aAAYD,SAAC,sBAG/DF,EAAAA,EAAAA,KAAA,SACEW,KAAK,WACLC,GAAG,yBACHT,UAAU,eACVU,KAAK,mBACLC,MAAOnC,EACPoC,SAAWT,GAAM1B,EAAmB0B,EAAEU,OAAOF,aAIjDd,EAAAA,EAAAA,KAAA,UACEY,GAAG,sBACHD,KAAK,SACLR,UAAU,iBACVc,SAAU/B,EAAUgB,SACrB,yBAMN,C","sources":["components/auth/ResetPassword.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useResetPasswordMutation } from \"../../redux/api/userApi\";\r\nimport toast from \"react-hot-toast\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ResetPassword = () => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n\r\n  const [resetPassword, { isLoading, error, isSuccess }] =\r\n    useResetPasswordMutation();\r\n\r\n  const { isAuthenticated } = useSelector((state) => state.auth);\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      navigate(\"/\");\r\n    }\r\n    if (error) {\r\n      toast.error(error?.data?.message);\r\n    }\r\n\r\n    if (isSuccess) {\r\n      toast.success(\"Password reset successfully\");\r\n      navigate(\"/login\");\r\n    }\r\n  }, [error, isAuthenticated, isSuccess, navigate]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      return toast.error(\"Password does not match. Try again!\");\r\n    }\r\n\r\n    const data = { password, confirmPassword };\r\n\r\n    resetPassword({ token: params?.token, body: data });\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"row wrapper\">\r\n        <div className=\"col-10 col-lg-5\">\r\n          <form className=\"shadow rounded bg-body\" onSubmit={submitHandler}>\r\n            <h2 className=\"mb-4\">New Password</h2>\r\n\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"password_field\" className=\"form-label\">\r\n                Password\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password_field\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"confirm_password_field\" className=\"form-label\">\r\n                Confirm Password\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"confirm_password_field\"\r\n                className=\"form-control\"\r\n                name=\"confirm_password\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <button\r\n              id=\"new_password_button\"\r\n              type=\"submit\"\r\n              className=\"btn w-100 py-2\"\r\n              disabled={isLoading}\r\n            >\r\n              Set Password\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"names":["ResetPassword","password","setPassword","useState","confirmPassword","setConfirmPassword","navigate","useNavigate","params","useParams","resetPassword","isLoading","error","isSuccess","useResetPasswordMutation","isAuthenticated","useSelector","state","auth","useEffect","_error$data","toast","data","message","success","_jsx","_Fragment","children","className","_jsxs","onSubmit","e","preventDefault","token","body","htmlFor","type","id","name","value","onChange","target","disabled"],"sourceRoot":""}