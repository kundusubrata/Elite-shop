{"version":3,"file":"static/js/685.f5a10fd3.chunk.js","mappings":"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","sources":["components/cart/CheckoutSteps.jsx","components/cart/PaymentMethod.jsx","components/helpers/Helper.js","components/layout/MetaData.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CheckoutSteps = ({ shipping, confirmOrder, payment }) => {\r\n  return (\r\n    <div className=\"checkout-progress d-flex justify-content-center mt-5\">\r\n      {shipping ? (\r\n        <Link to=\"/shipping\" className=\"float-right\">\r\n          <div className=\"triangle2-active\"></div>\r\n          <div className=\"step active-step\">Shipping</div>\r\n          <div className=\"triangle-active\"></div>\r\n        </Link>\r\n      ) : (\r\n        <Link to=\"#!\" className=\"float-right\" disabled>\r\n          <div className=\"triangle2-incomplete\"></div>\r\n          <div className=\"step incomplete\">Shipping</div>\r\n          <div className=\"triangle-incomplete\"></div>\r\n        </Link>\r\n      )}\r\n\r\n      {confirmOrder ? (\r\n        <Link to=\"/confirm_order\" className=\"float-right\">\r\n          <div className=\"triangle2-active\"></div>\r\n          <div className=\"step active-step\">Confirm Order</div>\r\n          <div className=\"triangle-active\"></div>\r\n        </Link>\r\n      ) : (\r\n        <Link to=\"#!\" className=\"float-right\" disabled>\r\n          <div className=\"triangle2-incomplete\"></div>\r\n          <div className=\"step incomplete\">Confirm Order</div>\r\n          <div className=\"triangle-incomplete\"></div>\r\n        </Link>\r\n      )}\r\n\r\n      {payment ? (\r\n        <Link to=\"/payment_method\" className=\"float-right\">\r\n          <div className=\"triangle2-active\"></div>\r\n          <div className=\"step active-step\">Payment</div>\r\n          <div className=\"triangle-active\"></div>\r\n        </Link>\r\n      ) : (\r\n        <Link to=\"#!\" className=\"float-right\" disabled>\r\n          <div className=\"triangle2-incomplete\"></div>\r\n          <div className=\"step incomplete\">Payment</div>\r\n          <div className=\"triangle-incomplete\"></div>\r\n        </Link>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckoutSteps;","import React, { useEffect, useState } from \"react\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CheckoutSteps from \"./CheckoutSteps\";\r\nimport { caluclateOrderCost } from \"../helpers/Helper\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  useCreateNewOrderMutation,\r\n  useStripeCheckoutSessionMutation,\r\n} from \"../../redux/api/orderApi\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nconst PaymentMethod = () => {\r\n  const [method, setMethod] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const { shippingInfo, cartItems } = useSelector((state) => state.cart);\r\n\r\n  const [createNewOrder, { error, isSuccess }] = useCreateNewOrderMutation();\r\n\r\n  const [\r\n    stripeCheckoutSession,\r\n    { data: checkoutData, error: checkoutError, isLoading },\r\n  ] = useStripeCheckoutSessionMutation();\r\n\r\n  useEffect(() => {\r\n    if (checkoutData) {\r\n      // console.log(\"==================\");\r\n      // console.log(checkoutData);\r\n      // console.log(\"==================\");\r\n      window.location.href = checkoutData?.url;\r\n    }\r\n\r\n    if (checkoutError) {\r\n      toast.error(checkoutError?.data?.message);\r\n    }\r\n  }, [checkoutData, checkoutError, navigate]);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      toast.error(error?.data?.message);\r\n    }\r\n\r\n    if (isSuccess) {\r\n      navigate(\"/me/orders?order_success=true\");\r\n    }\r\n  }, [error, isSuccess, navigate]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { itemsPrice, shippingPrice, taxPrice, totalPrice } =\r\n      caluclateOrderCost(cartItems);\r\n\r\n    if (method === \"COD\") {\r\n      // Create COD Order\r\n      const orderData = {\r\n        shippingInfo,\r\n        orderItems: cartItems,\r\n        itemsPrice,\r\n        shippingAmount: shippingPrice,\r\n        taxAmount: taxPrice,\r\n        totalAmount: totalPrice,\r\n        paymentInfo: {\r\n          status: \"Not Paid\",\r\n        },\r\n        paymentMethod: \"COD\",\r\n      };\r\n\r\n      createNewOrder(orderData);\r\n      // next step for webhooks\r\n      // stripe login\r\n      // stripe listen --events checkout.session.completed --forward-to localhost:4001/api/v1/payment/webhook\r\n    }\r\n\r\n    if (method === \"Card\") {\r\n      // Stripe Checkout\r\n      // alert(\"Card\");\r\n      const orderData = {\r\n        shippingInfo,\r\n        orderItems: cartItems,\r\n        itemsPrice,\r\n        shippingAmount: shippingPrice,\r\n        taxAmount: taxPrice,\r\n        totalAmount: totalPrice,\r\n      };\r\n\r\n      stripeCheckoutSession(orderData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MetaData title={\"Payment Method\"} />\r\n      <CheckoutSteps shipping confirmOrder payment />\r\n\r\n      <div className=\"row wrapper\">\r\n        <div className=\"col-10 col-lg-5\">\r\n          <form className=\"shadow rounded bg-body\" onSubmit={submitHandler}>\r\n            <h2 className=\"mb-4\">Select Payment Method</h2>\r\n\r\n            <div className=\"form-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"payment_mode\"\r\n                id=\"codradio\"\r\n                value=\"COD\"\r\n                onChange={(e) => setMethod(\"COD\")}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"codradio\">\r\n                Cash on Delivery\r\n              </label>\r\n            </div>\r\n            <div className=\"form-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"payment_mode\"\r\n                id=\"cardradio\"\r\n                value=\"Card\"\r\n                onChange={(e) => setMethod(\"Card\")}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"cardradio\">\r\n                Card - VISA, MasterCard\r\n              </label>\r\n            </div>\r\n\r\n            <button\r\n              id=\"shipping_btn\"\r\n              type=\"submit\"\r\n              className=\"btn py-2 w-100\"\r\n              disabled={isLoading}\r\n            >\r\n              CONTINUE\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaymentMethod;\r\n","export const getPriceQueryParams = (searchParams, key, value) => {\r\n  const hasValueInParam = searchParams.has(key);\r\n\r\n  if (value && hasValueInParam) {\r\n    searchParams.set(key, value);\r\n  } else if (value) {\r\n    searchParams.append(key, value);\r\n  } else if (hasValueInParam) {\r\n    searchParams.delete(key);\r\n  }\r\n\r\n  return searchParams;\r\n};\r\n\r\nexport const caluclateOrderCost = (cartItems) => {\r\n  const itemsPrice = cartItems?.reduce(\r\n    (acc, item) => acc + item.price * item.quantity,\r\n    0\r\n  );\r\n\r\n  const shippingPrice = itemsPrice > 200 ? 0 : 25;\r\n  const taxPrice = Number((0.15 * itemsPrice).toFixed(2));\r\n  const totalPrice = (itemsPrice + shippingPrice + taxPrice).toFixed(2);\r\n\r\n  return {\r\n    itemsPrice: Number(itemsPrice).toFixed(2),\r\n    shippingPrice,\r\n    taxPrice,\r\n    totalPrice,\r\n  };\r\n};","import React from 'react'\r\nimport {Helmet} from \"react-helmet\"\r\n\r\nconst MetaData = ({title}) => {\r\n  return (\r\n    <Helmet>\r\n        <title>\r\n            {`${title} - Elite Shop`}\r\n        </title>\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nexport default MetaData"],"names":["_ref","shipping","confirmOrder","payment","_jsxs","className","children","Link","to","_jsx","disabled","PaymentMethod","method","setMethod","useState","navigate","useNavigate","shippingInfo","cartItems","useSelector","state","cart","createNewOrder","error","isSuccess","useCreateNewOrderMutation","stripeCheckoutSession","data","checkoutData","checkoutError","isLoading","useStripeCheckoutSessionMutation","useEffect","_checkoutError$data","window","location","href","url","toast","message","_error$data","_Fragment","MetaData","title","CheckoutSteps","onSubmit","e","preventDefault","itemsPrice","shippingPrice","taxPrice","totalPrice","caluclateOrderCost","orderItems","shippingAmount","taxAmount","totalAmount","paymentInfo","status","paymentMethod","type","name","id","value","onChange","htmlFor","getPriceQueryParams","searchParams","key","hasValueInParam","has","set","append","delete","reduce","acc","item","price","quantity","Number","toFixed","Helmet","concat"],"sourceRoot":""}