{"version":3,"file":"static/js/341.0bdcab71.chunk.js","mappings":"mJAGA,MAUA,EAViBA,IAAc,IAAb,MAACC,GAAMD,EACvB,OACEE,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAAAC,UACHF,EAAAA,EAAAA,KAAA,SAAAE,SAAA,GAAAC,OACQJ,EAAK,oBAER,C,gKCCb,MAiGA,EAjGiBK,KAAO,IAADC,EACrB,MAAM,KAAEC,EAAI,UAAEC,EAAS,MAAEC,IAAUC,EAAAA,EAAAA,OAE5BC,IAAgBC,EAAAA,EAAAA,MACjBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAeN,EAAaO,IAAI,kBAEtCC,EAAAA,EAAAA,YAAU,KACI,IAADC,EAAPX,GACFY,EAAAA,GAAMZ,MAAW,OAALA,QAAK,IAALA,GAAW,QAANW,EAALX,EAAOF,YAAI,IAAAa,OAAN,EAALA,EAAaE,SAGvBL,IACFJ,GAASU,EAAAA,EAAAA,OACTR,EAAS,cACX,GACC,CAACN,EAAMI,EAASE,EAASE,IA2D5B,OAAIT,GAAkBP,EAAAA,EAAAA,KAACuB,EAAAA,EAAM,KAE3BvB,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,CAAAtB,UACAuB,EAAAA,EAAAA,MAAA,OAAAvB,SAAA,EACEF,EAAAA,EAAAA,KAAC0B,EAAAA,EAAQ,CAAC3B,MAAO,eAEjB0B,EAAAA,EAAAA,MAAA,MAAIE,UAAU,OAAMzB,SAAA,CAAM,OAAJI,QAAI,IAAJA,GAAY,QAARD,EAAJC,EAAMsB,cAAM,IAAAvB,OAAR,EAAJA,EAAcwB,OAAO,cAE3C7B,EAAAA,EAAAA,KAAC8B,EAAAA,IAAY,CACXxB,KAlEYyB,MAAO,IAADC,EACtB,MAAMJ,EAAS,CACbK,QAAS,CACP,CACEC,MAAO,KACPC,MAAO,KACPC,KAAM,OAER,CACEF,MAAO,SACPC,MAAO,SACPC,KAAM,OAER,CACEF,MAAO,iBACPC,MAAO,SACPC,KAAM,OAER,CACEF,MAAO,eACPC,MAAO,cACPC,KAAM,OAER,CACEF,MAAO,UACPC,MAAO,UACPC,KAAM,QAGVC,KAAM,IAyBR,OAtBI,OAAJ/B,QAAI,IAAJA,GAAY,QAAR0B,EAAJ1B,EAAMsB,cAAM,IAAAI,GAAZA,EAAcM,SAASC,IAAW,IAADC,EAAAC,EAC/Bb,EAAOS,KAAKK,KAAK,CACfC,GAAS,OAALJ,QAAK,IAALA,OAAK,EAALA,EAAOK,IACXC,OAAO,IAAD1C,OAAW,OAALoC,QAAK,IAALA,OAAK,EAALA,EAAOO,aACnBC,OAAa,OAALR,QAAK,IAALA,GAAkB,QAAbC,EAALD,EAAOS,mBAAW,IAAAR,GAAQ,QAARC,EAAlBD,EAAoBO,cAAM,IAAAN,OAArB,EAALA,EAA4BQ,cACpCC,YAAkB,OAALX,QAAK,IAALA,OAAK,EAALA,EAAOW,YACpBC,SACE1B,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAtB,SAAA,EACEF,EAAAA,EAAAA,KAACoD,EAAAA,GAAI,CAACC,GAAE,aAAAlD,OAAoB,OAALoC,QAAK,IAALA,OAAK,EAALA,EAAOK,KAAOjB,UAAU,kBAAiBzB,UAC9DF,EAAAA,EAAAA,KAAA,KAAG2B,UAAU,iBAEf3B,EAAAA,EAAAA,KAACoD,EAAAA,GAAI,CACHC,GAAE,kBAAAlD,OAAyB,OAALoC,QAAK,IAALA,OAAK,EAALA,EAAOK,KAC7BjB,UAAU,uBAAsBzB,UAEhCF,EAAAA,EAAAA,KAAA,KAAG2B,UAAU,sBAInB,IAGGC,CAAM,EAYHG,GACNJ,UAAU,OACV2B,UAAQ,EACRC,SAAO,EACPC,OAAK,QAGN,C","sources":["components/layout/MetaData.jsx","components/order/MyOrders.jsx"],"sourcesContent":["import React from 'react'\r\nimport {Helmet} from \"react-helmet\"\r\n\r\nconst MetaData = ({title}) => {\r\n  return (\r\n    <Helmet>\r\n        <title>\r\n            {`${title} - Elite Shop`}\r\n        </title>\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nexport default MetaData","import React, { useEffect } from \"react\";\r\nimport { useMyOrdersQuery } from \"../../redux/api/orderApi\";\r\nimport Loader from \"../layout/Loader\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport { Link, useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { clearCart } from \"../../redux/features/cartSlice\";\r\n\r\nconst MyOrders = () => {\r\n  const { data, isLoading, error } = useMyOrdersQuery();\r\n\r\n  const [searchParams] = useSearchParams();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const orderSuccess = searchParams.get(\"order_success\");\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      toast.error(error?.data?.message);\r\n    }\r\n\r\n    if (orderSuccess) {\r\n      dispatch(clearCart());\r\n      navigate(\"/me/orders\");\r\n    }\r\n  }, [error,dispatch,navigate,orderSuccess]);\r\n\r\n  const setOrders = () => {\r\n    const orders = {\r\n      columns: [\r\n        {\r\n          label: \"ID\",\r\n          field: \"id\",\r\n          sort: \"asc\",\r\n        },\r\n        {\r\n          label: \"Amount\",\r\n          field: \"amount\",\r\n          sort: \"asc\",\r\n        },\r\n        {\r\n          label: \"Payment Status\",\r\n          field: \"status\",\r\n          sort: \"asc\",\r\n        },\r\n        {\r\n          label: \"Order Status\",\r\n          field: \"orderStatus\",\r\n          sort: \"asc\",\r\n        },\r\n        {\r\n          label: \"Actions\",\r\n          field: \"actions\",\r\n          sort: \"asc\",\r\n        },\r\n      ],\r\n      rows: [],\r\n    };\r\n\r\n    data?.orders?.forEach((order) => {\r\n      orders.rows.push({\r\n        id: order?._id,\r\n        amount: `$${order?.totalAmount}`,\r\n        status: order?.paymentInfo?.status?.toUpperCase(),\r\n        orderStatus: order?.orderStatus,\r\n        actions: (\r\n          <>\r\n            <Link to={`/me/order/${order?._id}`} className=\"btn btn-primary\">\r\n              <i className=\"fa fa-eye\"></i>\r\n            </Link>\r\n            <Link\r\n              to={`/invoice/order/${order?._id}`}\r\n              className=\"btn btn-success ms-2\"\r\n            >\r\n              <i className=\"fa fa-print\"></i>\r\n            </Link>\r\n          </>\r\n        ),\r\n      });\r\n    });\r\n\r\n    return orders;\r\n  };\r\n\r\n  if (isLoading) return <Loader />;\r\n  return (\r\n    <>\r\n    <div>\r\n      <MetaData title={\"My Orders\"} />\r\n\r\n      <h1 className=\"my-5\">{data?.orders?.length} Orders</h1>\r\n\r\n      <MDBDataTable\r\n        data={setOrders()}\r\n        className=\"px-3\"\r\n        bordered\r\n        striped\r\n        hover\r\n      />\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MyOrders"],"names":["_ref","title","_jsx","Helmet","children","concat","MyOrders","_data$orders2","data","isLoading","error","useMyOrdersQuery","searchParams","useSearchParams","dispatch","useDispatch","navigate","useNavigate","orderSuccess","get","useEffect","_error$data","toast","message","clearCart","Loader","_Fragment","_jsxs","MetaData","className","orders","length","MDBDataTable","setOrders","_data$orders","columns","label","field","sort","rows","forEach","order","_order$paymentInfo","_order$paymentInfo$st","push","id","_id","amount","totalAmount","status","paymentInfo","toUpperCase","orderStatus","actions","Link","to","bordered","striped","hover"],"sourceRoot":""}